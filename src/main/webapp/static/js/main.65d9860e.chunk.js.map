{"version":3,"sources":["components/movieTableComponents/AdditionalTasksHeader.js","constants/filterConstants.js","constants/pageActionsConsts.js","components/movieTableComponents/TableHeader.js","components/movieTableComponents/PageFooter.js","constants/ticketActionsConsts.js","constants/backendConstants.js","utils/xmlUtils.js","notifications/sendNotification.js","actions/ticketActions.js","components/movieTableComponents/TableRow.js","components/movieTableComponents/TicketList.js","constants/coordinatesActionsConsts.js","actions/coordinatesActions.js","components/movieTableComponents/LinksForAdding.js","components/movieTableComponents/TicketTable.js","components/movieTableComponents/TablePage.js","components/customFormComponents/rendetedInputField.js","constants/enumConstants.js","constants/personActionsConsts.js","actions/personsActions.js","components/editForms/TicketEditForm.js","components/editPages/TicketEditPage.js","components/createForms/CreateTicketForm.js","components/createPages/CreateTicketPage.js","components/filterForms/IdFilterForm.js","components/filterPages/IdFilterPage.js","components/filterForms/NameFilterForm.js","components/filterPages/NameFilterPage.js","components/filterForms/CoordinateFilterForm.js","components/filterPages/CoordinateFilterPage.js","components/filterForms/DateFilterForm.js","components/filterPages/DateFilterPage.js","components/filterForms/DiscountFilterForm.js","components/filterPages/DiscountFilterPage.js","components/filterForms/PriceFilterForm.js","components/filterPages/PriceFilterPage.js","components/filterForms/TypeFilterForm.js","components/filterPages/TypeFilterPage.js","components/filterForms/PersonFilterForm.js","components/filterPages/PersonFilterPage.js","components/modal/Modal.js","components/editForms/EditCoordinatesForm.js","components/editPages/EditCoordinatesPage.js","components/createForms/CreateCoordinatesForm.js","components/createPages/CreateCoordinatesPage.js","constants/locationActionsConsts.js","actions/locationsActions.js","components/editForms/LocationEditForm.js","components/editPages/LocationEditPage.js","components/createForms/CreateLocationForm.js","components/createPages/CreateLocationPage.js","components/editForms/EditPersonForm.js","components/editPages/EditPersonPage.js","components/createForms/CreatePersonForm.js","components/createPages/CreatePersonPage.js","constants/additionalActionsConsts.js","components/additionalTasks/TypesTaskPage.js","actions/additionalTasksActions.js","personTableComponents/PersonTableHeader.js","personTableComponents/PersonTableRow.js","personTableComponents/PersonList.js","personTableComponents/PersonTable.js","components/additionalTasks/DiscountTaskPage.js","components/additionalTasks/PersonTaskPage.js","components/App.js","reducer/ticketReducer.js","reducer/pageReducer.js","reducer/coordinatesReducer.js","reducer/locationReducer.js","reducer/personReducer.js","reducer/additionalTasksReducer.js","reducer/rootReducer.js","index.js"],"names":["AdditionalTasksHeader","history","useHistory","className","id","onClick","evt","preventDefault","push","ID","NAME","COORDINATE","DATE","DISCOUNT","PRICE","TYPE","PERSON","SET_PER_PAGE","SET_CUR_PAGE","SET_CUR_CRITERION","SET_ITEM_COUNT","DELETE_TICKET","SET_SORT","REMOVE_SORT","SHOW_MODAL","SET_FILTER","REMOVE_FILTER","TableHeader","dispatch","useDispatch","sort","useSelector","state","page","sortBy","filters","currentCriterion","curCriterion","sortHandler","criterion","element","document","getElementById","includes","type","payload","style","color","setActive","value","console","log","name","PageFooter","perPage","currentPage","itemCount","useState","localPerPage","setLocalPerPage","localCurPage","setLocalCurPage","changePage","onChange","event","input","target","onFocus","onBlur","Number","isInteger","contentEditable","SET_TICKETS","SET_EDITED_TICKET","COORD_SERVLET","BASE","options","compact","textFn","parentElement","keyNo","Object","keys","_parent","length","keyName","nValue","isNaN","bValue","toLowerCase","nativeType","e","options1","fullTagEmptyElement","convert","require","serverException","msg","exception","message","position","autoDismiss","getTickets","curPage","criteria","result","substring","parseSortByParameter","filterBy","filter","from","to","like","xfrom","xto","yfrom","yto","parseFilters","fetch","method","headers","then","response","ok","text","xml2js","count","ticketDTOList","tickets","ticket","catch","error","errorMessage","exceptionDTO","Notifications","transferFormDataToTicketDTO","form","creationDate","undefined","price","discount","coordinates","person","location","locations","TableRow","props","ticketId","deleteHandler","deleteTicket","x","y","TicketList","listItems","numbers","Array","isArray","map","SET_COORDINATES","SET_EDITED_COORDINATES","getCoordinates","status","coordinatesDTOList","coordinate","LinksForAdding","TicketTable","ticketList","useEffect","deleteItem","TablePage","renderedInputField","label","readonly","meta","touched","warning","placeholder","readOnly","types","colors","SET_PERSONS","SET_EDITED_PERSON","getPerson","personDTOList","persons","transferFormDataToPersonsDTO","height","eyeColor","reduxForm","keepDirtyOnReinitialize","handleSubmit","submitting","pristine","reset","editedTicket","ticketType","coordinatesList","personList","locationsList","personsList","getSingleTicket","initialize","onSubmit","Field","component","o","selected","disabled","TicketEditPage","useParams","formData","xml","js2xml","body","window","reload","updateTicket","CreateTicketPage","createTicket","numberField","required","onSubmitSuccess","validate","IdFilterPage","textField","NameFilterPage","CoordinateFilterPage","dateField","onKeyDown","validDate","moment","isValid","ev","keycode","keyCode","which","ipLength","DateFilterPage","DateFilterForm","DiscountFilterPage","PriceFilterPage","values","errors","compare","TypeFilterPage","PersonFilterPage","Modal","active","children","stopPropagation","editedCoordinates","getSingleCoordinates","EditCoordinatesPage","coordinatesId","transferFormDataToCoordinatesDTO","updateCoordinates","CreateCoordinatesPage","createCoordinates","SET_LOCATIONS","SET_EDITED_LOCATION","getLocations","locationDTOList","editedLocation","loc","getSingleLocation","transferFormDataToLocationDTO","goBack","updateLocation","CreateLocationPage","createLocation","editedPerson","locationList","getSinglePerson","EditPersonPage","updatePerson","CreatePersonPage","createPerson","SET_TYPE_LIST","SET_TICKET_COUNT","SET_TICKET_LIST","SET_PERSON_LIST","TypeTaskPage","typeList","additional","ticketTypeDTOList","ticketTypes","t","PersonTableHeader","PersonTableRow","personId","PersonList","PersonTable","DurationTaskPage","localDiscount","setLocalDiscount","listen","action","url","ScreenwriterTaskPage","ticketCount","handleOnChangePerson","countDTO","createBrowserHistory","App","notifications","modalActive","path","LocationEditPage","exact","DiscountTaskPage","PersonTaskPage","initialState","rootReducer","combineReducers","item","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render"],"mappings":"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","file":"static/js/main.65d9860e.chunk.js","sourcesContent":["import '../../css/filter-header.css';\r\nimport '../../css/app.css';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction AdditionalTasksHeader() {\r\n    const history = useHistory();\r\n\r\n    function handleDiscountClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/additional/discount\");\r\n    }\r\n\r\n    function handleTypeClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/additional/type\");\r\n    }\r\n\r\n    function handlePersonClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/additional/person\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"filter-header base\">\r\n            <div className={\"tasks-div\"}>\r\n                <button id=\"new-ticket-but\" onClick={handleTypeClick}>\r\n                    TYPES TASK\r\n                </button>\r\n                <button id=\"new-ticket-but\" onClick={handleDiscountClick}>\r\n                    DISCOUNT TASK\r\n                </button>\r\n                <button id=\"new-ticket-but\" onClick={handlePersonClick}>\r\n                    PERSON TASK\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdditionalTasksHeader;\r\n","const ID = \"id\";\r\nconst NAME = \"name\";\r\nconst COORDINATE = \"coordinate\";\r\nconst DATE = \"date\";\r\nconst DISCOUNT = \"discount\";\r\nconst PRICE = \"price\";\r\nconst TYPE = \"type\";\r\nconst PERSON = \"person\";\r\nconst EDIT_COORD = \"editCoord\";\r\nexport {ID, NAME, COORDINATE, DATE, DISCOUNT, PRICE, TYPE, PERSON, EDIT_COORD};","export const SET_PER_PAGE = 'SET_PER_PAGE';\r\nexport const SET_CUR_PAGE = 'SET_CUR_PAGE';\r\nexport const SET_CUR_CRITERION = 'SET_CUR_CRITERION';\r\nexport const SET_ITEM_COUNT = 'SET_ITEM_COUNT';\r\nexport const DELETE_TICKET = 'DELETE_TICKET';\r\nexport const SET_SORT = 'SET_SORT';\r\nexport const REMOVE_SORT = 'REMOVE_SORT';\r\nexport const SHOW_MODAL = 'SHOW_MODAL';\r\nexport const SET_FILTER = 'SET_FILTER';\r\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\r\n","import '../../css/table-header.css';\r\nimport '../../css/app.css';\r\nimport {FaFilter, FaSortAmountDown} from 'react-icons/fa';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {COORDINATE, DATE, PRICE, TYPE, ID, NAME, DISCOUNT, PERSON} from '../../constants/filterConstants';\r\nimport {REMOVE_FILTER, REMOVE_SORT, SET_CUR_CRITERION, SET_SORT, SHOW_MODAL} from \"../../constants/pageActionsConsts\";\r\n\r\n\r\nfunction TableHeader() {\r\n    const dispatch = useDispatch();\r\n    const sort = useSelector(state => state.page.sortBy);\r\n    const filters = useSelector(state => state.page.filters);\r\n    const currentCriterion = useSelector(state => state.page.curCriterion);\r\n\r\n    function sortHandler(criterion) {\r\n        let element = document.getElementById(\"sort-\" + criterion);\r\n        if (!sort.includes(criterion)) {\r\n            dispatch({\r\n                type: SET_SORT,\r\n                payload: criterion\r\n            });\r\n            element.style.color = \"rgb(255,255,255)\";\r\n        } else {\r\n            dispatch({\r\n                type: REMOVE_SORT,\r\n                payload: criterion\r\n            });\r\n            element.style.color = \"rgba(255,255,255,0.5)\";\r\n        }\r\n    }\r\n\r\n    function setActive(value, criterion) {\r\n        console.log(\"CUR = \" + currentCriterion);\r\n        let element = document.getElementById(\"filter-\" + criterion);\r\n        for (const filter of filters) {\r\n            if (filter.name === criterion) {\r\n                dispatch({\r\n                    type: REMOVE_FILTER,\r\n                    payload: criterion\r\n                });\r\n                element.style.color = \"rgba(255,255,255,0.5)\";\r\n                return;\r\n            }\r\n        }\r\n        if (value) {\r\n            dispatch({\r\n                type: SET_CUR_CRITERION,\r\n                payload: criterion\r\n            });\r\n        }\r\n        dispatch({\r\n            type: SHOW_MODAL,\r\n            payload: value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"table-header base\" id=\"table-header\">\r\n\r\n            <div className=\"id-div\">\r\n                <span>Id</span>\r\n                <FaSortAmountDown color=\"rgba(255,255,255,0.5)\" className=\"pointer\" id=\"sort-id\"\r\n                                  onClick={() => sortHandler(ID)}/>\r\n                <FaFilter color=\"rgba(255,255,255,0.5)\" className=\"pointer\" id=\"filter-id\"\r\n                          onClick={() => setActive(true, ID)}/>\r\n            </div>\r\n            <div>\r\n                <span>Name</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-name\"\r\n                                  onClick={() => sortHandler(NAME)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-name\"\r\n                          onClick={() => setActive(true, NAME)}/>\r\n            </div>\r\n            <div>\r\n                <span>Coordinates</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-coordinate\"\r\n                                  onClick={() => sortHandler(COORDINATE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-coordinate\"\r\n                          onClick={() => setActive(true, COORDINATE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Creation Date</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-date\"\r\n                                  onClick={() => sortHandler(DATE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-date\"\r\n                          onClick={() => setActive(true, DATE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Discount</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-discount\"\r\n                                  onClick={() => sortHandler(DISCOUNT)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-discount\"\r\n                          onClick={() => setActive(true, DISCOUNT)}/>\r\n            </div>\r\n            <div>\r\n                <span>Price</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-price\"\r\n                                  onClick={() => sortHandler(PRICE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-price\"\r\n                          onClick={() => setActive(true, PRICE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Type</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-type\"\r\n                                  onClick={() => sortHandler(TYPE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-type\"\r\n                          onClick={() => setActive(true, TYPE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Person id</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-person\"\r\n                                  onClick={() => sortHandler(PERSON)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-person\"\r\n                          onClick={() => setActive(true, PERSON)}/>\r\n            </div>\r\n            <div>\r\n                <span>Action</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableHeader;\r\n","import '../../css/page-footer.css';\r\nimport '../../css/app.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SET_CUR_PAGE, SET_PER_PAGE} from \"../../constants/pageActionsConsts\";\r\nimport {BsPlusCircleFill, IoMdArrowRoundBack, IoMdArrowRoundForward} from \"react-icons/all\";\r\n\r\nfunction PageFooter() {\r\n    const perPage = useSelector(state => state.page.perPage);\r\n    const currentPage = useSelector(state => state.page.currentPage);\r\n    const itemCount = useSelector(state => state.page.itemCount);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [localPerPage, setLocalPerPage] = useState(\"10\");\r\n    const [localCurPage, setLocalCurPage] = useState(\"1\");\r\n\r\n    function handleOnChangePerPage(event) {\r\n        let input = event.target.value;\r\n        setLocalPerPage(input);\r\n    }\r\n\r\n    function handleOnFocusPerPage(event) {\r\n        setLocalPerPage(\"\");\r\n    }\r\n\r\n    function handleOnBlurPerPage(event) {\r\n        let input = event.target.value;\r\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) > 0)\r\n            dispatch({\r\n                type: SET_PER_PAGE,\r\n                payload: input\r\n            });\r\n        else {\r\n            setLocalPerPage(\"10\")\r\n            dispatch({\r\n                type: SET_PER_PAGE,\r\n                payload: 10\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleOnChangeCurPage(event) {\r\n        let input = event.target.value;\r\n        setLocalCurPage(input);\r\n    }\r\n\r\n    function handleOnFocusCurPage(event) {\r\n        setLocalCurPage(\"\");\r\n    }\r\n\r\n    function handleOnBlurCurPage(event) {\r\n        let input = event.target.value;\r\n        dispatch({\r\n            type: SET_CUR_PAGE,\r\n            payload: input\r\n        });\r\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) > 0)\r\n            dispatch({\r\n                type: SET_CUR_PAGE,\r\n                payload: input\r\n            });\r\n        else {\r\n            setLocalCurPage(\"1\")\r\n            dispatch({\r\n                type: SET_CUR_PAGE,\r\n                payload: 1\r\n            });\r\n        }\r\n    }\r\n\r\n    function createHandler() {\r\n        history.push(\"/soa-lab1/new\");\r\n    }\r\n\r\n    function changePage(value) {\r\n        if (value > 0 && ((value - 1) * perPage - itemCount) < 0) {\r\n            setLocalCurPage(value);\r\n            dispatch({\r\n                type: SET_CUR_PAGE,\r\n                payload: value\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"footer base\">\r\n            <button id=\"new-ticket-but\" onClick={() => createHandler()}>\r\n                <div className={\"icon-but\"}>\r\n                    <div className={\"icon\"}>\r\n                        <BsPlusCircleFill color={\"#4683de\"}/>\r\n                    </div>\r\n                    ADD TICKET\r\n                </div>\r\n            </button>\r\n            <div className=\"page-footer\">\r\n                <span>Per Page</span>\r\n                <input id=\"current-num\" value={localPerPage} onChange={handleOnChangePerPage}\r\n                       onFocus={handleOnFocusPerPage} onBlur={handleOnBlurPerPage}/>\r\n                <span>Total</span>\r\n                <input id=\"current-page\" value={itemCount} contentEditable={\"false\"}/>\r\n                <div id={\"left-arrow\"}>\r\n                    <IoMdArrowRoundBack className=\"pointer\" color=\"rgb(70,131,222)\"\r\n                                        onClick={() => changePage(currentPage - 1)}/>\r\n                </div>\r\n                <input id=\"current-page\" value={localCurPage} onChange={handleOnChangeCurPage}\r\n                       onFocus={handleOnFocusCurPage} onBlur={handleOnBlurCurPage}/>\r\n                <div id={\"right-arrow\"}>\r\n                    <IoMdArrowRoundForward className=\"pointer\" color=\"rgb(70,131,222)\"\r\n                                           onClick={() => changePage(currentPage + 1)}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PageFooter;\r\n","export const SET_TICKETS = 'SET_TICKETS';\r\nexport const SET_EDITED_TICKET = 'SET_EDITED_TICKET';\r\nexport const SET_PERSON_EDITED_TICKET = 'SET_PERSON_EDITED_TICKET';\r\n","export const TICKET_SERVLET = \"tickets\"\r\nexport const LOCATION_SERVLET = \"locations\"\r\nexport const COORD_SERVLET = \"coordinates\"\r\nexport const PERSON_SERVLET = \"persons\"\r\nexport const ADDITIONAL_SERVLET = \"additional\"\r\n// export const BASE = \"https://localhost:8080/\"\r\n//export const HEADER = 'Content-Type': 'application/xml; charset=utf-8'\r\nexport const BASE = \"/soa-lab1/\";","export function nativeType(value) {\r\n    var nValue = Number(value);\r\n    if (!isNaN(nValue)) {\r\n        return nValue;\r\n    }\r\n    var bValue = value.toLowerCase();\r\n    if (bValue === 'true') {\r\n        return true;\r\n    } else if (bValue === 'false') {\r\n        return false;\r\n    }\r\n    return value;\r\n}\r\n\r\nexport var removeJsonTextAttribute = function (value, parentElement) {\r\n    try {\r\n        var keyNo = Object.keys(parentElement._parent).length;\r\n        var keyName = Object.keys(parentElement._parent)[keyNo - 1];\r\n        parentElement._parent[keyName] = nativeType(value);\r\n    } catch (e) {\r\n    }\r\n}\r\n\r\nexport let options = {\r\n    compact: true,\r\n    /*trim: true,\r\n    ignoreDeclaration: true,\r\n    ignoreInstruction: true,\r\n    ignoreAttributes: true,\r\n    ignoreComment: true,\r\n    ignoreCdata: true,\r\n    ignoreDoctype: true,*/\r\n    textFn: removeJsonTextAttribute\r\n};\r\n\r\nexport let options1 = {\r\n    compact: true,\r\n    fullTagEmptyElement: true\r\n};\r\n\r\nexport const convert = require('xml-js');","export const serverException = (msg) => {\r\n    let exception = {};\r\n    exception.title = \"Произошла ошибка\";\r\n    exception.message = msg;\r\n    exception.position = \"tr\";\r\n    exception.autoDismiss = 3;\r\n    return exception;\r\n}\r\n","import {history} from '../components/App.js';\r\nimport {DELETE_TICKET, SET_ITEM_COUNT} from \"../constants/pageActionsConsts\";\r\nimport {SET_EDITED_TICKET, SET_TICKETS} from \"../constants/ticketActionsConsts\";\r\nimport {COORDINATE, DATE, PRICE, TYPE, ID, NAME, DISCOUNT, PERSON} from \"../constants/filterConstants\";\r\nimport {BASE, TICKET_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport Notifications from 'react-notification-system-redux';\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nfunction parseSortByParameter(criteria) {\r\n    if (criteria.length === 0) {\r\n        return \"\";\r\n    }\r\n    let result = \"&sortBy=\";\r\n    for (const criterion of criteria) {\r\n        result = result + criterion + \";\";\r\n    }\r\n    return result.substring(0, result.length - 1);\r\n}\r\n\r\nfunction parseFilters(filters) {\r\n    if (filters.length === 0) {\r\n        return \"\";\r\n    }\r\n    let result = \"&filterBy=\";\r\n    for (const filter of filters) {\r\n        switch (filter.name) {\r\n            case ID:\r\n                result = result + ID + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case NAME:\r\n                result = result + NAME + \",\" + filter.like + \";\"\r\n                break;\r\n            case DISCOUNT:\r\n                result = result + DISCOUNT + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case PRICE:\r\n                result = result + PRICE + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case TYPE:\r\n                result = result + TYPE + \",\" + filter.like + \";\"\r\n                break;\r\n            case DATE:\r\n                result = result + DATE + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case PERSON:\r\n                result = result + PERSON + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case COORDINATE:\r\n                result = result + COORDINATE + \",\" + filter.xfrom + \",\" + filter.xto + \",\" + filter.yfrom + \",\" + filter.yto + \";\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return result.substring(0, result.length - 1);\r\n}\r\n\r\nexport function getTickets(page) {\r\n    let perPage = page.perPage;\r\n    let curPage = page.currentPage;\r\n    let sortBy = parseSortByParameter(page.sortBy);\r\n    let filterBy = parseFilters(page.filters)\r\n    return (dispatch) => {\r\n        const url = BASE + TICKET_SERVLET +\r\n            \"?perPage=\" + perPage + \"\" +\r\n            \"&curPage=\" + curPage +\r\n            sortBy +\r\n            filterBy;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else return response.text();\r\n            })\r\n            .then(response => {\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const count = result.ticketDTOList.count;\r\n                const tickets = result.ticketDTOList.tickets.ticket;\r\n                dispatch({\r\n                    type: SET_TICKETS,\r\n                    payload: tickets\r\n                });\r\n                dispatch({\r\n                    type: SET_ITEM_COUNT,\r\n                    payload: count\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                error.text()\r\n                    .then(errorMessage => {\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport function deleteTicket(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + TICKET_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                else {\r\n                    dispatch({type: DELETE_TICKET});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                error.text()\r\n                    .then(errorMessage => {\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n            });\r\n    }\r\n}\r\n\r\nexport function updateTicket(ticket) {\r\n    let xml = convert.js2xml(transferFormDataToTicketDTO(ticket), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + TICKET_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<ticketDTOList><tickets><ticket>\" + xml + \"</ticket></tickets></ticketDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/soa-lab1\");\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text()\r\n                    .then(errorMessage => {\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n            });\r\n    }\r\n}\r\n\r\nfunction transferFormDataToTicketDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.name = form.name;\r\n    result.creationDate = form.creationDate;\r\n    if (form.price !== undefined)\r\n        result.price = form.price;\r\n    result.type = form.type;\r\n    result.discount = form.discount;\r\n    result.coordinates = {};\r\n    result.coordinates.id = form.coordinates;\r\n    result.person = {};\r\n    result.person.id = form.person;\r\n    result.person.location = {};\r\n    result.person.location.id = form.locations;\r\n    return result;\r\n}\r\n\r\nexport function createTicket(ticket) {\r\n    let xml = convert.js2xml(transferFormDataToTicketDTO(ticket), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + TICKET_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<ticketDTOList><tickets><ticket>\" + xml + \"</ticket></tickets></ticketDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else {\r\n                    history.push(\"/soa-lab1\");\r\n                    window.location.reload(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getSingleTicket(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + TICKET_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(\"STATUS \" + response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response)\r\n                const result = convert.xml2js(response, options);\r\n                const ticket = result.ticketDTOList.tickets.ticket;\r\n                dispatch({\r\n                    type: SET_EDITED_TICKET,\r\n                    payload: ticket\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\n\r\n","import '../../css/table-row.css';\r\nimport '../../css/app.css';\r\nimport {FaEdit, FaTrashAlt} from 'react-icons/fa';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteTicket} from \"../../actions/ticketActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction TableRow(props) {\r\n    const ticket = props.ticket;\r\n    const ticketId = ticket.id;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    function deleteHandler(id) {\r\n        dispatch(deleteTicket(id));\r\n    }\r\n\r\n    function editHandler(id) {\r\n        history.push(\"/soa-lab1/edit/\" + id);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"table-row base\">\r\n            <div className=\"id-div\">{ticketId}</div>\r\n            <div>{ticket.name}</div>\r\n            <div>({ticket.coordinates.x} ; {ticket.coordinates.y})</div>\r\n            <div>{ticket.creationDate}</div>\r\n            <div>{ticket.discount}</div>\r\n            <div>{ticket.price}</div>\r\n            <div>{ticket.type.toLowerCase()}</div>\r\n            <div>{ticket.person === undefined ? \"null\" : ticket.person.id}</div>\r\n            <div className=\"action-div\">\r\n                <div onClick={() => editHandler(ticketId)}>\r\n                    <FaEdit color=\"#3DC937FF\" className=\"pointer icon\"/>\r\n                </div>\r\n                <div onClick={() => deleteHandler(ticketId)}>\r\n                    <FaTrashAlt className=\"pointer icon\" color=\"#EB6767FF\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableRow;\r\n","import TableRow from \"./TableRow\";\r\n\r\nfunction TicketList(props) {\r\n    const numbers = props.tickets;\r\n    let listItems;\r\n    if (numbers === undefined) {\r\n        return (\r\n            <div className=\"table-row base id-div\">\r\n                <div className=\"id-div\">No data.</div>\r\n            </div>\r\n        );\r\n    }\r\n    if (!Array.isArray(numbers)) {\r\n        //const movie = numbers[0];\r\n        listItems = <TableRow ticket={numbers} key={numbers.id}/>\r\n    } else {\r\n        listItems = numbers.map((ticket) =>\r\n            <TableRow ticket={ticket} key={ticket.id}/>\r\n        );\r\n    }\r\n    return (\r\n        <\r\n            div> {listItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TicketList;","export const SET_COORDINATES = \"SET_COORDINATES\";\r\nexport const SET_EDITED_COORDINATES = \"SET_EDITED_COORDINATES\";","import {SET_COORDINATES, SET_EDITED_COORDINATES} from \"../constants/coordinatesActionsConsts\";\r\nimport {history} from \"../components/App\";\r\nimport {BASE, COORD_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nexport function getSingleCoordinates(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                const coordinate = result.coordinatesDTOList.coordinates.coordinate;\r\n                dispatch({\r\n                    type: SET_EDITED_COORDINATES,\r\n                    payload: coordinate\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getCoordinates() {\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(\"RESPONSE = \" + response);\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const coordinates = result.coordinatesDTOList.coordinates.coordinate;\r\n                dispatch({\r\n                    type: SET_COORDINATES,\r\n                    payload: coordinates\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nfunction transferFormDataToCoordinatesDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.x = form.x;\r\n    result.y = form.y;\r\n    return result;\r\n}\r\n\r\nexport function updateCoordinates(coordinates, id) {\r\n    let xml = convert.js2xml(transferFormDataToCoordinatesDTO(coordinates), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<coordinatesDTOList><coordinates><coordinate>\" + xml + \"</coordinate></coordinates></coordinatesDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/soa-lab1/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function createCoordinates(coordinates, id) {\r\n    let xml = convert.js2xml(coordinates, options1);\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<coordinatesDTOList><coordinates><coordinate>\" + xml + \"</coordinate></coordinates></coordinatesDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/soa-lab1\");\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}","import {useHistory} from \"react-router-dom\";\r\n\r\nfunction LinksForAdding() {\r\n    const history = useHistory();\r\n\r\n    function addNewPersonClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/person/new\");\r\n    }\r\n\r\n    function addNewLocationClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/location/new\");\r\n    }\r\n\r\n    function addNewCoordinatesClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/coordinates/new\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"filter-header base\">\r\n            <div className={\"tasks-div\"}>\r\n                <button id=\"new-ticket-but\" onClick={addNewLocationClick}>\r\n                    ADD LOCATION\r\n                </button>\r\n                <button id=\"new-ticket-but\" onClick={addNewPersonClick}>\r\n                    ADD PERSON\r\n                </button>\r\n                <button id=\"new-ticket-but\" onClick={addNewCoordinatesClick}>\r\n                    ADD COORDINATES\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LinksForAdding;\r\n","import '../../css/movie-table.css';\r\nimport AdditionalTasksHeader from \"./AdditionalTasksHeader\";\r\nimport TableHeader from \"./TableHeader\";\r\nimport PageFooter from \"./PageFooter\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getTickets} from \"../../actions/ticketActions\";\r\nimport TicketList from \"./TicketList\";\r\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\r\nimport LinksForAdding from \"./LinksForAdding\";\r\n\r\nfunction TicketTable() {\r\n    const dispatch = useDispatch();\r\n    const page = useSelector(state => state.page);\r\n    const tickets = useSelector(state => state.tickets.ticketList);\r\n\r\n\r\n    useEffect(() => {\r\n        //dispatch(getMovies(page.perPage, page.currentPage));\r\n        dispatch(getTickets(page));\r\n        dispatch(getCoordinates());\r\n    }, [page.currentPage, page.perPage, page.deleteItem, page.sortBy, page.filters]);\r\n\r\n\r\n    return (\r\n        <div className=\"movie-table\">\r\n            <LinksForAdding/>\r\n            <AdditionalTasksHeader/>\r\n            <TableHeader/>\r\n            <TicketList tickets={tickets}/>\r\n            <PageFooter/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TicketTable;","import '../../css/table-layout.css';\r\nimport TicketTable from \"./TicketTable\";\r\n\r\nfunction TablePage() {\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h1>Ticket Table</h1>\r\n            <TicketTable/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TablePage;\r\n","import React from \"react\";\r\n\r\nexport const renderedInputField = ({input, label, readonly, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"input-box\">\r\n        <div className=\"label\">{label}</div>\r\n        <input {...input} placeholder={label} type={type} readOnly={readonly}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n        {touched && ((error && <span className=\"error\">{error}</span>) || (warning &&\r\n            <span className=\"error\">{warning}</span>))}\r\n    </div>\r\n)","//export const genres = [\"\", \"DRAMA\", \"TRAGEDY\", \"HORROR\", \"FANTASY\"];\r\nexport const types = [\"\", \"VIP\", \"USUAL\", \"BUDGETARY\", \"CHEAP\"];\r\nexport const colors = [\"GREEN\", \"RED\", \"YELLOW\"];\r\n//export const add_genres = [\"DRAMA\", \"TRAGEDY\", \"HORROR\", \"FANTASY\"];\r\nexport const add_types = [\"VIP\", \"USUAL\", \"BUDGETARY\", \"CHEAP\"];","export const SET_PERSONS = \"SET_PERSONS\";\r\nexport const SET_EDITED_PERSON = \"SET_EDITED_PERSON\";","import {history} from \"../components/App\";\r\nimport {BASE, PERSON_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport {SET_EDITED_PERSON, SET_PERSONS} from \"../constants/personActionsConsts\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nexport function getSinglePerson(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(\"STATUS \" + response.status);\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                const person = result.personDTOList.persons.person;\r\n                dispatch({\r\n                    type: SET_EDITED_PERSON,\r\n                    payload: person\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getPerson() {\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(\"RESPONSE = \" + response);\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const person = result.personDTOList.persons.person;\r\n                dispatch({\r\n                    type: SET_PERSONS,\r\n                    payload: person\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nfunction transferFormDataToPersonsDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.height = form.height;\r\n    result.eyeColor = form.eyeColor;\r\n    result.location = {};\r\n    result.location.id = form.locations;\r\n    return result;\r\n}\r\n\r\nexport function updatePerson(person, id) {\r\n    let xml = convert.js2xml(transferFormDataToPersonsDTO(person), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<personDTOList><persons><person>\" + xml + \"</person></persons></personDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/soa-lab1/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function createPerson(person, id) {\r\n    let xml = convert.js2xml(transferFormDataToPersonsDTO(person), options1);\r\n    console.log(\"XML\" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<personDTOList><persons><person>\" + xml + \"</person></persons></personDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/soa-lab1\");\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSingleTicket} from \"../../actions/ticketActions\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {types} from \"../../constants/enumConstants\";\r\nimport {required} from \"../../validators/required\";\r\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getPerson} from \"../../actions/personsActions\";\r\n\r\nconst TicketEditForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const ticketId = useSelector(state => state.tickets.editedTicket.id);\r\n    const name = useSelector(state => state.tickets.editedTicket.name);\r\n    const discount = useSelector(state => state.tickets.editedTicket.discount);\r\n    const price = useSelector(state => state.tickets.editedTicket.price);\r\n    const creationDate = useSelector(state => state.tickets.editedTicket.creationDate);\r\n    const ticketType = useSelector(state => state.tickets.editedTicket.type);\r\n    const coordinates = useSelector(state => state.tickets.editedTicket.coordinates);\r\n    //const coordinatesId = useSelector(state => state.movies.editedTicket.coordinates.id);\r\n    const person = useSelector(state => state.tickets.editedTicket.person);\r\n    // const location = useSelector(state => state.tickets.editedTicket.screenWriter.location);\r\n    const coordinatesList = useSelector(state => state.coordinates.coordinatesList);\r\n    const locationList = useSelector(state => state.location.locationsList);\r\n    const personList = useSelector(state => state.person.personsList);\r\n    const history = useHistory();\r\n    //const selectedCoordinates = useSelector(state => state.form.edit-ticket-form.values.coordinates)\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleTicket(id));\r\n        dispatch(getCoordinates());\r\n        //dispatch(getLocations());\r\n        dispatch(getPerson());\r\n    }, []);\r\n\r\n    function handleEditCoordSubmit(evt) {\r\n        evt.preventDefault();\r\n        let element = document.getElementById(\"coordinates\");\r\n        history.push(\"/soa-lab1/coordinates/edit/\" + element.value);\r\n    }\r\n\r\n    function handleCreateCoordSubmit(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/coordinates/new\");\r\n    }\r\n\r\n    function handleEditPersonSubmit(evt) {\r\n        evt.preventDefault();\r\n        let element = document.getElementById(\"person\");\r\n        history.push(\"/soa-lab1/person/edit/\" + element.value);\r\n    }\r\n\r\n    function handleCreatePersonSubmit(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/person/new\");\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            name: name,\r\n            id: ticketId,\r\n            discount: discount,\r\n            price: price,\r\n            creationDate: creationDate,\r\n            type: ticketType,\r\n            coordinates: coordinates.id,\r\n            person: person.id,\r\n        });\r\n    }, [id, name, discount, price, ticketType, coordinates, person])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Ticket</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <Field name=\"discount\" type=\"number\"\r\n                       component={renderedInputField} label=\"Discount\"\r\n                    /*  validate={[required]}*/\r\n                />\r\n                <Field name=\"price\" type=\"number\"\r\n                       component={renderedInputField} label=\"Price\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <Field name=\"creationDate\" type=\"text\"\r\n                       component={renderedInputField} label=\"Creation date\"\r\n                       readonly=\"readonly\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Type</div>\r\n                <Field name=\"type\"\r\n                       component=\"select\" label=\"Type\">\r\n                    {types.map(o => <option key={o} value={o} selected={ticketType === o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Coordinates</h3>\r\n                <div className=\"label\">(X , Y)</div>\r\n                <Field name=\"coordinates\" id=\"coordinates\"\r\n                       component=\"select\" label=\"Coordinates\">\r\n                    {coordinatesList.map(o => <option key={o.id} value={o.id}>({o.x} , {o.y}) </option>)}\r\n                </Field>\r\n                <div className={\"buttons-div\"}>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleEditCoordSubmit}>Edit</button>\r\n                    </div>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleCreateCoordSubmit}>Create</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Person</h3>\r\n                <div className=\"label\">Person's id</div>\r\n                <Field name=\"person\" id=\"person\"\r\n                       component=\"select\">\r\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.id}</option>)}\r\n                </Field>\r\n                <div className={\"buttons-div\"}>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleEditPersonSubmit}>Edit</button>\r\n                    </div>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleCreatePersonSubmit}>Create</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-ticket-form',\r\n    keepDirtyOnReinitialize: true\r\n})(TicketEditForm)","import '../../css/table-layout.css';\r\nimport TicketEditForm from \"../editForms/TicketEditForm\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateTicket} from \"../../actions/ticketActions\";\r\n\r\n\r\nfunction TicketEditPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updateTicket(formData));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit ticket (ID: {id})</h2>\r\n            <hr/>\r\n            <TicketEditForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TicketEditPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {types} from \"../../constants/enumConstants\";\r\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\r\nimport {getPerson} from \"../../actions/personsActions\";\r\n\r\nconst CreateTicketForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const ticketType = useSelector(state => state.tickets.editedTicket.type);\r\n    const coordinatesList = useSelector(state => state.coordinates.coordinatesList);\r\n    const personList = useSelector(state => state.person.personsList);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCoordinates());\r\n        dispatch(getPerson());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            type: types[0],\r\n            coordinates: coordinatesList[0].id,\r\n            person: personList[0].id\r\n        });\r\n    }, [coordinatesList, personList])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Ticket</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <Field name=\"discount\" type=\"number\"\r\n                       component={renderedInputField} label=\"Discount\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <Field name=\"price\" type=\"number\"\r\n                       component={renderedInputField} label=\"Price\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Type</div>\r\n                <Field name=\"type\"\r\n                       component=\"select\" label=\"Type\">\r\n                    {types.map(o => <option key={o} value={o} selected={ticketType === o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Coordinates</h3>\r\n                <div className=\"label\">(X , Y)</div>\r\n                <Field name=\"coordinates\" id=\"coordinates\"\r\n                       component=\"select\" label=\"Coordinates\">\r\n                    {coordinatesList.map(o => <option key={o.id} value={o.id}>({o.x} , {o.y}) </option>)}\r\n                </Field>\r\n            </div>\r\n\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Person</h3>\r\n                <div className=\"label\">Person's id</div>\r\n                <Field name=\"person\" id=\"person\"\r\n                       component=\"select\">\r\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.id}</option>)}\r\n                </Field>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-ticket-form',\r\n})(CreateTicketForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {createTicket} from \"../../actions/ticketActions\";\r\nimport CreateTicketForm from \"../createForms/CreateTicketForm\";\r\n\r\n\r\nfunction CreateTicketPage() {\r\n    /*const history = useHistory();*/\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createTicket(formData));\r\n        /* history.push('/');*/\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h1>Create ticket</h1>\r\n            <CreateTicketForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateTicketPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('id-filter-form'));\r\n\r\n\r\nconst IdFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with id in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'id-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(IdFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport IdFilterForm from \"../filterForms/IdFilterForm\";\r\n\r\n\r\nfunction IdFilterPage() {\r\n    const dispatch = useDispatch();\r\n    const filters = useSelector(state => state.page.filters);\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-id\");\r\n        for (const filter of filters) {\r\n            if (filter.name === \"id\") {\r\n                dispatch({\r\n                    type: 'REMOVE_FILTER',\r\n                    payload: \"id\"\r\n                });\r\n            }\r\n        }\r\n        let filter = {};\r\n        filter.name = \"id\";\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <IdFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IdFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst textField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"text-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('name-filter-form'));\r\n\r\n\r\nconst NameFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with title like</h3>\r\n            <div className=\"text-box-container\">\r\n                <Field name=\"like\" type=\"text\"\r\n                       component={textField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'name-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(NameFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport NameFilterForm from \"../filterForms/NameFilterForm\";\r\nimport {SET_FILTER, SHOW_MODAL} from \"../../constants/pageActionsConsts\";\r\n\r\n\r\nfunction NameFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-name\");\r\n        let filter = {};\r\n        filter.name = \"name\";\r\n        filter.like = formData.like;\r\n        dispatch({\r\n            type: SET_FILTER,\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: SHOW_MODAL,\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <NameFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NameFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('coordinate-filter-form'));\r\n\r\n\r\nconst CoordinateFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with x in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"xfrom\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"xto\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <h3>Select tickets with y in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"yfrom\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"yto\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'coordinate-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(CoordinateFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport CoordinateFilterForm from \"../filterForms/CoordinateFilterForm\";\r\nimport {COORDINATE} from \"../../constants/filterConstants\";\r\n\r\n\r\nfunction CoordinateFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-coordinate\");\r\n        let filter = {};\r\n        filter.name = COORDINATE;\r\n        filter.xfrom = formData.xfrom;\r\n        filter.xto = formData.xto;\r\n        filter.yfrom = formData.yfrom;\r\n        filter.yto = formData.yto;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <CoordinateFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CoordinateFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\nimport moment from 'moment';\r\n\r\nconst dateField = ({input, label, type, onKeyDown, meta: {touched, error, warning}}) => (\r\n    <div className=\"date-box\">\r\n        <input {...input} placeholder={label} type={type} onKeyDown={onKeyDown}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n        {touched && ((error && <span className=\"error\">{error}</span>) || (warning &&\r\n            <span className=\"error\">{warning}</span>))}\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst validDate = value => {\r\n    if (moment(value, 'DD/MM/YYYY', true).isValid())\r\n        return undefined;\r\n    else\r\n        return \"Date is incorrect\";\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('id-filter-form'));\r\n\r\nconst onKeyDown = (ev) => {\r\n    var keycode;\r\n    if (window.event)\r\n        keycode = window.event.keyCode;\r\n    else if (ev)\r\n        keycode = ev.which;\r\n    let ipLength = ev.target.value.length;\r\n    if (keycode !== 8) {\r\n        if (ipLength === 2 || ipLength === 5) {\r\n            ev.target.value += '/';\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst IdFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with date in range</h3>\r\n            <div className=\"date-range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={dateField} label=\"DD/MM/YYYY\"\r\n                       onKeyDown={onKeyDown}\r\n                       validate={[required, validDate]}\r\n                />\r\n                <div id=\"date-dash\"> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={dateField} label=\"DD/MM/YYYY\"\r\n                       onKeyDown={onKeyDown}\r\n                       validate={[required, validDate]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default reduxForm({\r\n    form: 'id-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(IdFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DATE} from \"../../constants/filterConstants\";\r\nimport DateFilterForm from \"../filterForms/DateFilterForm\";\r\n\r\n\r\nfunction DateFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-date\");\r\n        let filter = {};\r\n        filter.name = DATE;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <DateFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DateFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('discount-filter-form'));\r\n\r\n\r\nconst DiscountFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with discount in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'discount-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(DiscountFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport DiscountFilterForm from \"../filterForms/DiscountFilterForm\";\r\nimport {DISCOUNT} from \"../../constants/filterConstants\";\r\n\r\n\r\nfunction DiscountFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-discount\");\r\n        let filter = {};\r\n        filter.name = DISCOUNT;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <DiscountFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DiscountFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('price-filter-form'));\r\n\r\n\r\nconst PriceFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with price in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'price-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(PriceFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {PRICE} from \"../../constants/filterConstants\";\r\nimport PriceFilterForm from \"../filterForms/PriceFilterForm\";\r\n\r\n\r\nfunction PriceFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-price\");\r\n        let filter = {};\r\n        filter.name = PRICE;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <PriceFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PriceFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('type-filter-form'));\r\n\r\nconst validateRadioGroupIsNotEmpty = values => {\r\n    let errors = {};\r\n    if (!values.compare) {\r\n        errors.compare = 'Required';\r\n    }\r\n    return errors;\r\n};\r\n\r\nconst TypeFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with type</h3>\r\n            <div className=\"radio-group\">\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"VIP\"/>Vip</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"USUAL\"/>Usual</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"BUDGETARY\"/>Budgetary</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"CHEAP\"/>Cheap</label>\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'type-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n    validate: validateRadioGroupIsNotEmpty\r\n})(TypeFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {TYPE} from \"../../constants/filterConstants\";\r\nimport TypeFilterForm from \"../filterForms/TypeFilterForm\";\r\n\r\n\r\nfunction TypeFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-type\");\r\n        let filter = {};\r\n        filter.name = TYPE;\r\n        filter.like = formData.compare;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <TypeFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TypeFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst textField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"text-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('person-filter-form'));\r\n\r\n\r\nconst PersonFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select tickets with person id in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'person-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(PersonFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport PersonFilterForm from \"../filterForms/PersonFilterForm\";\r\nimport {PERSON} from \"../../constants/filterConstants\";\r\n\r\n\r\nfunction PersonFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-person\");\r\n        let filter = {};\r\n        filter.name = PERSON;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <PersonFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonFilterPage;\r\n","import React from \"react\";\r\nimport \"../../css/modal.css\";\r\n\r\nconst Modal = ({active, setActive, children}) => {\r\n    return (\r\n        <div className={active ? \"modal active\" : \"modal\"}\r\n             onClick={() => setActive(false)}>\r\n            <div className={active ? \"modal-content active\" : \"modal-content\"}\r\n                 onClick={e => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Modal;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {getSingleCoordinates} from \"../../actions/coordinatesActions\";\r\n\r\nconst EditCoordinatesForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const coordinates = useSelector(state => state.coordinates.editedCoordinates);\r\n\r\n    useEffect(() => {\r\n        //dispatch(getSingleMovie(id));\r\n        dispatch(getSingleCoordinates(id));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            id: coordinates.id,\r\n            x: coordinates.x,\r\n            y: coordinates.y\r\n        });\r\n    }, [coordinates])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Coordinates</h3>\r\n\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-coordinates-form',\r\n    keepDirtyOnReinitialize: true\r\n})(EditCoordinatesForm)","import '../../css/table-layout.css';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateCoordinates} from \"../../actions/coordinatesActions\";\r\nimport EditCoordinatesForm from \"../editForms/EditCoordinatesForm\";\r\n\r\n\r\nfunction EditCoordinatesPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const coordinatesId = useSelector(state => state.coordinates.editedCoordinates.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updateCoordinates(formData, coordinatesId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Coordinates (ID: {id})</h2>\r\n            <hr/>\r\n            <EditCoordinatesForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditCoordinatesPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\n\r\nconst CreateCoordinatesForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Coordinates</h3>\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                    /*  validate={[required]}*/\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-coordinates-form',\r\n    keepDirtyOnReinitialize: true\r\n})(CreateCoordinatesForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createCoordinates} from \"../../actions/coordinatesActions\";\r\nimport CreateCoordinatesForm from \"../createForms/CreateCoordinatesForm\";\r\n\r\n\r\nfunction CreateCoordinatesPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const coordId = useSelector(state => state.coordinates.editedCoordinates.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createCoordinates(formData, coordId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Create Coordinates</h2>\r\n            <hr/>\r\n            <CreateCoordinatesForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateCoordinatesPage;\r\n","export const SET_LOCATIONS = \"SET_LOCATIONS\"\r\nexport const SET_EDITED_LOCATION = \"SET_EDITED_LOCATION\"","import {history} from \"../components/App\";\r\nimport {BASE, LOCATION_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport {SET_EDITED_LOCATION, SET_LOCATIONS} from \"../constants/locationActionsConsts\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nexport function getSingleLocation(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                const loc = result.locationDTOList.locations.location;\r\n                dispatch({\r\n                    type: SET_EDITED_LOCATION,\r\n                    payload: loc\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getLocations() {\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(\"RESPONSE = \" + response);\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const locations = result.locationDTOList.locations.location;\r\n                dispatch({\r\n                    type: SET_LOCATIONS,\r\n                    payload: locations\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\n\r\nfunction transferFormDataToLocationDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.x = form.x;\r\n    result.y = form.y;\r\n    result.name = form.name;\r\n    return result;\r\n}\r\n\r\nexport function updateLocation(location, id) {\r\n    console.log(location);\r\n    let xml = convert.js2xml(transferFormDataToLocationDTO(location), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<locationDTOList><locations><location>\" + xml + \"</location></locations></locationDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else return response.text();\r\n            })\r\n            .then(response => {\r\n                history.goBack();\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function createLocation(coordinates, id) {\r\n    let xml = convert.js2xml(coordinates, options1);\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<locationDTOList><locations><location>\" + xml + \"</location></locations></locationDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else return response.text();\r\n            })\r\n            .then(response => {\r\n                history.push(\"/soa-lab1\");\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {getSingleLocation} from \"../../actions/locationsActions\";\r\n\r\nconst LocationEditForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const location = useSelector(state => state.location.editedLocation);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleLocation(id));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            id: location.id,\r\n            x: location.x,\r\n            y: location.y,\r\n            name: location.name\r\n        });\r\n    }, [location])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Location</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name of location\"\r\n                />\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-location-form',\r\n    keepDirtyOnReinitialize: true\r\n})(LocationEditForm)","import '../../css/table-layout.css';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateLocation} from \"../../actions/locationsActions\";\r\nimport LocationEditForm from \"../editForms/LocationEditForm\";\r\n\r\n\r\nfunction EditCoordinatesPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const locationId = useSelector(state => state.location.editedLocation.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updateLocation(formData, locationId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Location (ID: {id})</h2>\r\n            <hr/>\r\n            <LocationEditForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditCoordinatesPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\n\r\nconst LocationCreateForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Location</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name of location\"\r\n                />\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-location-form',\r\n})(LocationCreateForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createLocation} from \"../../actions/locationsActions\";\r\nimport LocationCreateForm from \"../createForms/CreateLocationForm\";\r\n\r\n\r\nfunction CreateLocationPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const locationId = useSelector(state => state.location.editedLocation.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createLocation(formData, locationId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Create Location</h2>\r\n            <hr/>\r\n            <LocationCreateForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateLocationPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {colors} from \"../../constants/enumConstants\";\r\nimport {getSinglePerson} from \"../../actions/personsActions\";\r\nimport {getLocations} from \"../../actions/locationsActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst EditPersonForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const person = useSelector(state => state.person.editedPerson);\r\n    const locationList = useSelector(state => state.location.locationsList)\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(getSinglePerson(id));\r\n        dispatch(getLocations());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            id: person.id,\r\n            height: person.height,\r\n            eyeColor: person.eyeColor,\r\n            locations: person.location.id\r\n        });\r\n    }, [person, locationList])\r\n\r\n    function handleEditLocationSubmit(evt) {\r\n        evt.preventDefault();\r\n        let element = document.getElementById(\"locations\");\r\n        history.push(\"/soa-lab1/location/edit/\" + element.value);\r\n    }\r\n\r\n    function handleCreateLocationSubmit(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/location/new\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Screenwriter</h3>\r\n                <div className=\"label\">Location name</div>\r\n\r\n                <div className={\"buttons-div\"}>\r\n                    <Field name=\"locations\" id=\"locations\"\r\n                           component=\"select\" label=\"Coordinates\">\r\n                        {locationList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                    </Field>\r\n                    <button id={\"location-form-but\"} onClick={handleEditLocationSubmit}>Edit</button>\r\n                    <button id={\"location-form-but\"} onClick={handleCreateLocationSubmit}>Create</button>\r\n                </div>\r\n                <Field name=\"height\" type=\"number\"\r\n                       component={renderedInputField} label=\"Height\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Eye color</div>\r\n                <Field name=\"eyeColor\"\r\n                       component=\"select\" label=\"Eye color\">\r\n                    {colors.map(o => <option key={o} value={o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-person-form',\r\n    keepDirtyOnReinitialize: true\r\n})(EditPersonForm)","import '../../css/table-layout.css';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updatePerson} from \"../../actions/personsActions\";\r\nimport EditPersonForm from \"../editForms/EditPersonForm\";\r\n\r\n\r\nfunction EditPersonPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const ticketId = useSelector(state => state.tickets.editedTicket.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updatePerson(formData, ticketId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Person (ID: {id})</h2>\r\n            <hr/>\r\n            <EditPersonForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPersonPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {colors} from \"../../constants/enumConstants\";\r\nimport {getLocations} from \"../../actions/locationsActions\";\r\n\r\nconst CreatePersonForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const locationList = useSelector(state => state.location.locationsList)\r\n\r\n    useEffect(() => {\r\n        dispatch(getLocations());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            locations: locationList[0].id,\r\n            eyeColor: colors[0]\r\n        });\r\n    }, [locationList])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"ticket-form\"}>\r\n            <div className={\"ticket-form\"}>\r\n                <h3>Person</h3>\r\n                <div className=\"label\">Location name</div>\r\n                <Field name=\"locations\" id=\"locations\"\r\n                       component=\"select\" label=\"Coordinates\">\r\n                    {locationList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                </Field>\r\n                <Field name=\"height\" type=\"number\"\r\n                       component={renderedInputField} label=\"Height (kilo)\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Eye color</div>\r\n                <Field name=\"eyeColor\"\r\n                       component=\"select\" label=\"Eye color\">\r\n                    {colors.map(o => <option key={o} value={o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-person-form',\r\n})(CreatePersonForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CreatePersonForm from \"../createForms/CreatePersonForm\";\r\nimport {createPerson} from \"../../actions/personsActions\";\r\n\r\n\r\nfunction CreatePersonPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const personId = useSelector(state => state.person.editedPerson.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createPerson(formData, personId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Create Person</h2>\r\n            <hr/>\r\n            <CreatePersonForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePersonPage;\r\n","// export const SET_GENRE_COUNT = \"SET_GENRE_COUNT\"\r\n// export const SET_GENRE = \"SET_GENRE\"\r\n// export const SET_DISCOUNT = \"SET_DISCOUNT\"\r\n// export const SET_DISCOUNT_COUNT = \"SET_DISCOUNT_COUNT\"\r\n// export const SET_PERSON = \"SET_PERSON\"\r\n// export const SET_PERSON_LIST = \"SET_PERSON_LIST\"\r\nexport const SET_TYPE_LIST = \"SET_TYPE_LIST\";\r\nexport const SET_TICKET_COUNT = \"SET_TICKET_COUNT\";\r\nexport const SET_TICKET_LIST = \"SET_TICKET_LIST\";\r\nexport const SET_PERSON_LIST = \"SET_PERSON_LIST\";\r\nexport const SET_DISCOUNT = \"SET_DISCOUNT\";","import '../../css/table-layout.css';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_TYPE_LIST} from \"../../constants/additionalActionsConsts\";\r\nimport {getTypeList} from \"../../actions/additionalTasksActions\";\r\n\r\nfunction TypeTaskPage() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const typeList = useSelector(state => state.additional.typeList);\r\n\r\n    useEffect(() => {\r\n        // return history.listen(location => {\r\n        //     if (history.action === 'POP') {\r\n        //         getTypeList();\r\n        //     } else {\r\n        //         getTypeList();\r\n        //     }\r\n\r\n        // })\r\n        dispatch(getTypeList());\r\n    }, [])\r\n\r\n    function redirectOnMain() {\r\n        history.push(\"/soa-lab1\");\r\n        dispatch({\r\n            type: SET_TYPE_LIST,\r\n            payload: []\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-layout\">\r\n            <h1>Ticket types task</h1>\r\n            <div className={\"add-task-container\"}>\r\n                <div>What unique ticket types are presented in table</div>\r\n            </div>\r\n            {typeList && typeList.length > 0 &&\r\n            typeList.map(t => \r\n                <li>{t.type}</li>\r\n            )\r\n            }\r\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO MOVIES</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TypeTaskPage;\r\n","import {ADDITIONAL_SERVLET, BASE} from \"../constants/backendConstants\";\r\nimport {convert, options} from \"../utils/xmlUtils\";\r\nimport {SET_TYPE_LIST, SET_TICKET_COUNT, SET_TICKET_LIST} from \"../constants/additionalActionsConsts\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\nexport function getTypeList() {\r\n    return (dispatch) => {\r\n        const url = BASE + ADDITIONAL_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                dispatch({\r\n                    type: SET_TYPE_LIST,\r\n                    payload: result.ticketTypeDTOList.ticketTypes.ticketType\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getTicketList(discount) {\r\n    console.log(\"DISCOUNT = \" + discount);\r\n    return (dispatch) => {\r\n        const url = BASE + ADDITIONAL_SERVLET + \"?discount=\" + discount;\r\n        console.log(url);\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                console.log(result);\r\n                dispatch({\r\n                    type: SET_TICKET_LIST,\r\n                    payload: result.ticketDTOList.tickets.ticket\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getTicketCount(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + ADDITIONAL_SERVLET + \"?person=\" + id;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(\"STATUS \" + response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                const result = convert.xml2js(response, options);\r\n                dispatch({\r\n                    type: SET_TICKET_COUNT,\r\n                    payload: result.countDTO.count\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}","import '../css/table-header.css';\r\nimport '../css/app.css';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nfunction PersonTableHeader() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"table-header base\" id=\"table-header\">\r\n\r\n            <div className=\"id-div\">\r\n                <span>Id</span>\r\n            </div>\r\n            <div>\r\n                <span>Name</span>\r\n            </div>\r\n            <div>\r\n                <span>Discount</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonTableHeader;\r\n","import \"../css/table-row.css\"\r\nimport '../css/app.css';\r\n\r\nfunction PersonTableRow(props) {\r\n    const person = props.person;\r\n    const personId = person.id;\r\n\r\n    return (\r\n        <div className=\"table-row base\">\r\n            <div className=\"id-div\">{personId}</div>\r\n            <div>{person.name}</div>\r\n            <div>{person.discount}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonTableRow;\r\n","import PersonTableRow from \"./PersonTableRow\";\r\n\r\nfunction PersonList(props) {\r\n    const personList = props.personList;\r\n    // console.log(\"SCREENWRITER LIST = \" + screenwriterList)\r\n    let listItems;\r\n    if (personList === undefined) {\r\n        return (\r\n            <div className=\"table-row base id-div\">\r\n                <div className=\"id-div\">No data.</div>\r\n            </div>\r\n        );\r\n    }\r\n    if (!Array.isArray(personList)) {\r\n        console.log(\"NOT ARRAY\")\r\n        listItems = <PersonTableRow person={personList} key={personList.id}/>\r\n    } else {\r\n        listItems = personList.map((person) =>\r\n            <PersonTableRow person={person} key={person.id}/>\r\n        );\r\n    }\r\n    return (\r\n        <div>{listItems}</div>\r\n    );\r\n}\r\n\r\nexport default PersonList;","import '../css/movie-table.css';\r\nimport PersonTableHeader from \"./PersonTableHeader\";\r\nimport PersonList from \"./PersonList\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction PersonTable() {\r\n    const personList = useSelector(state => state.additional.ticketList);\r\n\r\n    return (\r\n        <div className=\"movie-table\">\r\n            <PersonTableHeader/>\r\n            <PersonList personList={personList}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonTable;","import '../../css/table-layout.css';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_DISCOUNT, SET_TICKET_LIST} from \"../../constants/additionalActionsConsts\";\r\nimport {getLengthCount, getTicketList} from \"../../actions/additionalTasksActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport PersonTable from '../../personTableComponents/PersonTable';\r\n\r\nfunction DurationTaskPage() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    //const durationCount = useSelector(state => state.additional.lengthCount);\r\n    const ticketList = useSelector(state => state.additional.ticketList);\r\n    const [localDiscount, setLocalDiscount] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        return history.listen(location => {\r\n            if (history.action === 'POP') {\r\n                dispatch({\r\n                    type: SET_TICKET_LIST,\r\n                    payload: []\r\n                });\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }, [])\r\n\r\n    function handleOnChangeDiscount(event) {\r\n        let input = event.target.value;\r\n        setLocalDiscount(input);\r\n    }\r\n\r\n    function handleOnFocusDiscount(event) {\r\n        setLocalDiscount(\"\");\r\n        dispatch({\r\n            type: SET_TICKET_LIST,\r\n            payload: []\r\n        });\r\n    }\r\n\r\n    function handleOnBlurDiscount(event) {\r\n        let input = event.target.value;\r\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) >= 0) {\r\n            dispatch(getTicketList(input));\r\n        } else {\r\n            setLocalDiscount(\"\")\r\n        }\r\n    }\r\n\r\n    function redirectOnMain() {\r\n        dispatch({\r\n            type: SET_TICKET_LIST,\r\n            payload: []\r\n        });\r\n        history.push(\"/soa-lab1\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-layout\">\r\n            <h1>Discount task</h1>\r\n            <div className={\"add-task-container\"}>\r\n                <div>Get tickets exist with discount less than</div>\r\n                <input type={\"number\"} className={\"add-input\"} value={localDiscount}\r\n                       onChange={handleOnChangeDiscount}\r\n                       onFocus={handleOnFocusDiscount}\r\n                       onBlur={handleOnBlurDiscount}/>\r\n            </div>\r\n            {(!Array.isArray(ticketList) || ticketList.length > 0) &&\r\n            <PersonTable/>\r\n            }\r\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO TICKETS</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DurationTaskPage;\r\n","import '../../css/table-layout.css';\r\nimport React, {useEffect} from \"react\";\r\nimport {getPerson} from \"../../actions/personsActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_TICKET_COUNT, SET_PERSON_LIST} from \"../../constants/additionalActionsConsts\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getTicketCount} from \"../../actions/additionalTasksActions\";\r\nimport PersonTable from \"../../personTableComponents/PersonTable\";\r\n\r\nfunction ScreenwriterTaskPage() {\r\n    const dispatch = useDispatch();\r\n    const personList = useSelector(state => state.person.personsList);\r\n    //const personList_ = useSelector(state => state.additional.personList);\r\n    const ticketCount = useSelector(state => state.additional.ticketCount);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPerson());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return history.listen(location => {\r\n            if (history.action === 'POP') {\r\n                dispatch({\r\n                    type: SET_PERSON_LIST,\r\n                    payload: []\r\n                });\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }, [])\r\n\r\n    function redirectOnMain() {\r\n        history.push(\"/soa-lab1\");\r\n        dispatch({\r\n            type: SET_TICKET_COUNT,\r\n            payload: \"\"\r\n        });\r\n    }\r\n\r\n    function handleOnChangePerson(event) {\r\n        let input = event.target.value;\r\n        if (input !== \"\")\r\n            dispatch(getTicketCount(input));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"task-layout\">\r\n            <h1>Person task</h1>\r\n            <div className={\"add-task-container\"}>\r\n                <div>Count tickets with PERSON's id less than</div>\r\n                <select className={\"add-select\"}\r\n                        onChange={handleOnChangePerson}\r\n                        onBlur={handleOnChangePerson}>\r\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.id}</option>)}\r\n                </select>\r\n            </div>\r\n            {ticketCount !== \"\" &&\r\n            <div className={\"answer\"}> Answer: {ticketCount}</div>\r\n            }\r\n\r\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO TICKETS</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScreenwriterTaskPage;\r\n","import '../css/app.css';\r\nimport TablePage from \"./movieTableComponents/TablePage\";\r\nimport Notifications from 'react-notification-system-redux';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport TicketEditPage from \"./editPages/TicketEditPage\";\r\nimport CreateTicketPage from \"./createPages/CreateTicketPage\";\r\nimport createBrowserHistory from 'history/createBrowserHistory'\r\nimport {COORDINATE, DATE, PRICE, TYPE, ID, NAME, DISCOUNT, PERSON} from \"../constants/filterConstants\";\r\nimport IdFilterPage from \"./filterPages/IdFilterPage\";\r\nimport NameFilterPage from \"./filterPages/NameFilterPage\";\r\nimport CoordinateFilterPage from \"./filterPages/CoordinateFilterPage\";\r\nimport DateFilterPage from \"./filterPages/DateFilterPage\";\r\nimport DiscountFilterPage from \"./filterPages/DiscountFilterPage\";\r\nimport PriceFilterPage from \"./filterPages/PriceFilterPage\";\r\nimport TypeFilterPage from \"./filterPages/TypeFilterPage\";\r\n//import RatingFilterPage from \"./filterPages/RatingFilterPage\";\r\nimport PersonFilterPage from \"./filterPages/PersonFilterPage\";\r\nimport Modal from \"./modal/Modal\";\r\nimport EditCoordinatesPage from \"./editPages/EditCoordinatesPage\";\r\nimport CreateCoordinatesPage from \"./createPages/CreateCoordinatesPage\";\r\nimport LocationEditPage from \"./editPages/LocationEditPage\";\r\nimport CreateLocationPage from \"./createPages/CreateLocationPage\";\r\nimport EditPersonPage from \"./editPages/EditPersonPage\";\r\nimport CreatePersonPage from \"./createPages/CreatePersonPage\";\r\nimport TypeTaskPage from \"./additionalTasks/TypesTaskPage\";\r\nimport DiscountTaskPage from \"./additionalTasks/DiscountTaskPage\";\r\nimport PersonTaskPage from \"./additionalTasks/PersonTaskPage\";\r\n\r\nexport const history = createBrowserHistory()\r\n\r\n/*class DebugRouter extends Router {\r\n    constructor(props){\r\n        super(props);\r\n        console.log('initial history is: ', JSON.stringify(this.history, null,2))\r\n        this.history.listen((location, action)=>{\r\n            console.log(\r\n                `The current URL is ${location.pathname}${location.search}${location.hash}`\r\n            )\r\n            console.log(`The last navigation action was ${action}`, JSON.stringify(this.history, null,2));\r\n        });\r\n    }\r\n}*/\r\n\r\nfunction App() {\r\n    const notifications = useSelector(state => state.notifications);\r\n    const modalActive = useSelector(state => state.page.modalActive);\r\n    const dispatch = useDispatch();\r\n    const currentCriterion = useSelector(state => state.page.curCriterion);\r\n\r\n    function setActive(value) {\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Modal active={modalActive} setActive={setActive} id=\"modal\">\r\n                {currentCriterion === ID && <IdFilterPage/>}\r\n                {currentCriterion === NAME && <NameFilterPage/>}\r\n                {currentCriterion === COORDINATE && <CoordinateFilterPage/>}\r\n                {currentCriterion === DATE && <DateFilterPage/>}\r\n                {currentCriterion === DISCOUNT && <DiscountFilterPage/>}\r\n                {currentCriterion === PRICE && <PriceFilterPage/>}\r\n                {currentCriterion === TYPE && <TypeFilterPage/>}\r\n                {currentCriterion === PERSON && <PersonFilterPage/>}\r\n            </Modal>\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path=\"/soa-lab1/edit/:id\">\r\n                        <TicketEditPage/>\r\n                    </Route>\r\n                    <Route path=\"/soa-lab1/coordinates/edit/:id\">\r\n                        <EditCoordinatesPage/>\r\n                    </Route>\r\n                    <Route path=\"/soa-lab1/location/edit/:id\">\r\n                        <LocationEditPage/>\r\n                    </Route>\r\n                    <Route path=\"/soa-lab1/person/edit/:id\">\r\n                        <EditPersonPage/>\r\n                    </Route>\r\n                    <Route exact path=\"/soa-lab1/coordinates/new\">\r\n                        <CreateCoordinatesPage/>\r\n                    </Route>\r\n                    <Route exact path=\"/soa-lab1/location/new\">\r\n                        <CreateLocationPage/>\r\n                    </Route>\r\n                    <Route exact path=\"/soa-lab1/person/new\">\r\n                        <CreatePersonPage/>\r\n                    </Route>\r\n                    <Route exact path=\"/soa-lab1/additional/type\">\r\n                        <TypeTaskPage/>\r\n                    </Route>\r\n                    <Route exact path=\"/soa-lab1/additional/discount\">\r\n                        <DiscountTaskPage/>\r\n                    </Route>\r\n                    <Route exact path=\"/soa-lab1/additional/person\">\r\n                        <PersonTaskPage/>\r\n                    </Route>\r\n                    <Route path=\"/soa-lab1/new\">\r\n                        <CreateTicketPage/>\r\n                    </Route>\r\n                    <Route exact path=\"/soa-lab1\">\r\n                        <TablePage/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n            <Notifications notifications={notifications}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {SET_EDITED_TICKET, SET_TICKETS} from \"../constants/ticketActionsConsts\";\r\n\r\nconst initialState = {\r\n    ticketList: [],\r\n    editedTicket: {\r\n        coordinates: {id: \"\", x: \"\", y: \"\"},\r\n        person: {\r\n            id: \"\", eyeColor: \"\", height: \"\",\r\n            location: {id: \"\", x: \"\", name: \"\", y: \"\"}\r\n        }\r\n    }\r\n};\r\n\r\nexport function ticketReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_TICKETS:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                ticketList: action.payload\r\n            };\r\n        case SET_EDITED_TICKET:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                editedTicket: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {\r\n    DELETE_TICKET,\r\n    REMOVE_FILTER,\r\n    REMOVE_SORT,\r\n    SET_CUR_CRITERION,\r\n    SET_CUR_PAGE,\r\n    SET_FILTER,\r\n    SET_ITEM_COUNT,\r\n    SET_PER_PAGE,\r\n    SET_SORT,\r\n    SHOW_MODAL\r\n} from \"../constants/pageActionsConsts\";\r\n\r\nconst initialState = {\r\n    perPage: 10,\r\n    currentPage: 1,\r\n    itemCount: \"\",\r\n    deleteItem: 0,\r\n    sortBy: [],\r\n    modalActive: false,\r\n    filters: [],\r\n    curCriterion: \"\",\r\n};\r\n\r\n\r\nexport function pageReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PER_PAGE:\r\n            return {\r\n                ...state,\r\n                perPage: action.payload\r\n            };\r\n        case SET_CUR_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload\r\n            };\r\n        case SET_CUR_CRITERION:\r\n            return {\r\n                ...state,\r\n                curCriterion: action.payload\r\n            };\r\n        case SET_ITEM_COUNT:\r\n            return {\r\n                ...state,\r\n                itemCount: action.payload\r\n            };\r\n        case DELETE_TICKET:\r\n            return {\r\n                ...state,\r\n                deleteItem: state.deleteItem + 1\r\n            };\r\n        case SET_SORT:\r\n            return {\r\n                ...state,\r\n                sortBy: [...state.sortBy, action.payload]\r\n            };\r\n        case REMOVE_SORT:\r\n            return {\r\n                ...state,\r\n                sortBy: state.sortBy.filter(item => item !== action.payload)\r\n            };\r\n        case SHOW_MODAL:\r\n            return {\r\n                ...state,\r\n                modalActive: action.payload\r\n            };\r\n        case SET_FILTER:\r\n            return {\r\n                ...state,\r\n                filters: [...state.filters, action.payload]\r\n            };\r\n        case REMOVE_FILTER:\r\n            return {\r\n                ...state,\r\n                filters: state.filters.filter(item => item.name !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {SET_COORDINATES, SET_EDITED_COORDINATES} from \"../constants/coordinatesActionsConsts\";\r\n\r\nconst initialState = {\r\n    coordinatesList: [{id: \"\", x: \"\", y: \"\"}],\r\n    editedCoordinates: {id: \"\", x: \"\", y: \"\"}\r\n};\r\n\r\nexport function coordinatesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_COORDINATES:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                coordinatesList: action.payload\r\n            };\r\n        case SET_EDITED_COORDINATES:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                editedCoordinates: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {SET_EDITED_LOCATION, SET_LOCATIONS} from \"../constants/locationActionsConsts\";\r\n\r\nconst initialState = {\r\n    locationsList: [{id: \"\", x: \"\", y: \"\", name: \"\"}],\r\n    editedLocation: {id: \"\", x: \"\", y: \"\", name: \"\"}\r\n};\r\n\r\nexport function locationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_LOCATIONS:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                locationsList: action.payload\r\n            };\r\n        case SET_EDITED_LOCATION:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                editedLocation: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {SET_EDITED_PERSON, SET_PERSONS} from \"../constants/personActionsConsts\";\r\n\r\nconst initialState = {\r\n    personsList: [{id: \"\", height: \"\", eyeColor: \"\", location: {}}],\r\n    editedPerson: {id: \"\", height: \"\", eyeColor: \"\", location: {}}\r\n};\r\n\r\nexport function personReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PERSONS:\r\n            return {\r\n                ...state,\r\n                personsList: action.payload\r\n            };\r\n        case SET_EDITED_PERSON:\r\n            return {\r\n                ...state,\r\n                editedPerson: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {\r\n    SET_TICKET_COUNT,\r\n    SET_TICKET_LIST,\r\n    SET_TYPE_LIST,\r\n    SET_PERSON_LIST\r\n} from \"../constants/additionalActionsConsts\";\r\n\r\nconst initialState = {\r\n    // genre: \"\",\r\n    // genreCount: \"\",\r\n    // length: \"\",\r\n    ticketCount: \"\",\r\n    // screenwriter: {},\r\n    typeList: [],\r\n    ticketList: [],\r\n    personList: []\r\n};\r\n\r\nexport function additionalTasksReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_TYPE_LIST:\r\n            return {\r\n                ...state,\r\n                typeList: action.payload\r\n            };\r\n        case SET_TICKET_COUNT:\r\n            return {\r\n                ...state,\r\n                ticketCount: action.payload\r\n            };\r\n        case SET_TICKET_LIST:\r\n            return {\r\n                ...state,\r\n                ticketList: action.payload\r\n            };\r\n        case SET_PERSON_LIST:\r\n            return {\r\n                ...state,\r\n                personList: action.payload\r\n            };\r\n        // case SET_GENRE_COUNT:\r\n        //     return {\r\n        //         ...state,\r\n        //         genreCount: action.payload\r\n        //     };\r\n        // case SET_GENRE:\r\n        //     return {\r\n        //         ...state,\r\n        //         genre: action.payload\r\n        //     };\r\n        // case SET_SCREENWRITER_LIST:\r\n        //     return {\r\n        //         ...state,\r\n        //         screenwriterList: action.payload\r\n        //     };\r\n        // case SET_LENGTH:\r\n        //     return {\r\n        //         ...state,\r\n        //         length: action.payload\r\n        //     };\r\n        // case SET_LENGTH_COUNT:\r\n        //     return {\r\n        //         ...state,\r\n        //         lengthCount: action.payload\r\n        //     };\r\n        // case SET_SCREENWRITER:\r\n        //     return {\r\n        //         ...state,\r\n        //         screenwriter: action.payload\r\n        //     };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux'\r\nimport {ticketReducer} from './ticketReducer.js'\r\nimport {reducer as notifications} from 'react-notification-system-redux';\r\nimport {pageReducer} from \"./pageReducer\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport {coordinatesReducer} from \"./coordinatesReducer\";\r\nimport {locationReducer} from \"./locationReducer\";\r\nimport {personReducer} from \"./personReducer\";\r\nimport {additionalTasksReducer} from \"./additionalTasksReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    tickets: ticketReducer,\r\n    notifications: notifications,\r\n    page: pageReducer,\r\n    coordinates: coordinatesReducer,\r\n    location: locationReducer,\r\n    person: personReducer,\r\n    additional: additionalTasksReducer,\r\n    form: formReducer,\r\n});","import App from './components/App'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {rootReducer} from './reducer/rootReducer.js'\r\nimport {Provider} from \"react-redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport logger from \"redux-logger\";\r\nimport {applyMiddleware, createStore} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk, logger)),\r\n);\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}